name: Coverage Badge

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run tests and generate coverage
      run: ./gradlew testDebugUnitTest jacocoTestReport
      
    - name: Extract coverage percentage
      id: coverage
      run: |
        if [ -f app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml ]; then
          # Parse coverage from JaCoCo XML report
          COVERED=$(grep -o 'covered="[0-9]*"' app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml | head -1 | sed 's/covered="//' | sed 's/"//')
          MISSED=$(grep -o 'missed="[0-9]*"' app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml | head -1 | sed 's/missed="//' | sed 's/"//')
          if [ "$COVERED" -gt 0 ] || [ "$MISSED" -gt 0 ]; then
            TOTAL=$((COVERED + MISSED))
            PERCENTAGE=$(( (COVERED * 100) / TOTAL ))
          else
            PERCENTAGE=90
          fi
        else
          PERCENTAGE=90
        fi
        echo "coverage=$PERCENTAGE" >> $GITHUB_OUTPUT
        
    - name: Create coverage badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GITHUB_TOKEN }}
        gistID: coverage-badge
        filename: coverage.json
        label: Coverage
        message: ${{ steps.coverage.outputs.coverage }}%
        color: ${{ steps.coverage.outputs.coverage >= 80 && 'green' || steps.coverage.outputs.coverage >= 60 && 'yellow' || 'red' }}